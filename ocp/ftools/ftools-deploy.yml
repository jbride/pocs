# Execution: Istio enabled
#   istioctl kube-inject -f ftools-deploy.yml > $HOME/lab/ftools-istio.yml
#   oc create -f $HOME/lab/ftools-istio.yml
#   oc patch deploy/ftools --patch '{"spec":{"template":{"spec":{"containers":[{"name":"istio-proxy", "resources": {   "limits":{"cpu": "500m","memory": "128Mi"},"requests":{"cpu":"50m","memory":"32Mi"}   }}]}}}}'
#   oc patch deploy/ftools --patch '{"spec":{"template":{"spec":{"initContainers":[{"name":"istio-init", "resources": {   "limits":{"cpu": "500m","memory": "128Mi"},"requests":{"cpu":"50m","memory":"32Mi"}   }}]}}}}'
#   oc rollout resume deploy ftools

kind: List
apiVersion: v1
items:

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ftools-data
    labels:
      app: ftools-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ftools
    labels:
      app: ftools
  spec:
    selector:
      matchLabels:
        deployment: ftools
    paused: false
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ftools
      spec:
        containers:
        - env: 
          imagePullPolicy: IfNotPresent
          name: ftools
          volumeMounts:
          - name: ftools-data
            mountPath: "/opt"
          resources:
            limits:
              cpu: 3000m
              memory: 1024Mi
            requests:
              cpu: 300m
              memory: 64Mi
        volumes:
        - name: "ftools-data"
          persistentVolumeClaim:
            claimName: "ftools-data"
    selector:
      name: ftools
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - ftools
          from:
            kind: ImageStreamTag
            name: "ftools:2.15"
            namespace: user1-er-demo
        type: ImageChange

